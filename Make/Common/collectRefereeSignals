#!/bin/bash
# A simple script to collect the state changes that should have been announced
# by whistles and the first message a team sent back. Cannot handle undos.

if [ $# -lt 2 ]; then
  echo >&2 "usage: $0 <log> <team number>"
  exit 1
fi

signals=(none kickInBlue kickInRed goalKickBlue goalKickRed cornerKickBlue cornerKickRed goalBlue goalRed pushingFreeKickBlue pushingFreeKickRed fullTime substitutionBlue substitutionRed)

grep <"$1" -E "^ *(state: |data: UkdydP)" \
| uniq \
| while read type message; do
    if [ "$type" == "data:" ]; then
      output="$(base64 -d <<< "$message" \
      | hexdump -s 5 -n 3 -e '3/1 "%d "' -e '"\n"')"
      IFS=' ' read player team signal <<<"$output"
      echo "|team $team, player $player detected ${signals[$signal]}"
    else
      echo "!$message"
    fi
  done \
| grep -E "^!|^\|team $2," \
| tr -d '\n' \
| sed -e 's%set!playing%kickOff%g' \
  -e 's%playing!ready%goal%g' \
  -e 's%!initial%%g' \
  -e 's%!ready%%g' \
  -e 's%!set%%g' \
  -e 's%!playing%%g' \
| tr  '!' '\n' \
| sed 's%\([^|]*\)\|\([^|]*\).*%\1 \2%' \
| grep -v ready \
| while read event message; do
    if [ -z "$event" ]; then
      continue
    elif [ -z "$message" ]; then
      echo "$event: missed"
    else
      echo "$event: $message"
    fi
  done
